ds <- read_csv("https://github.com/ripberjt/qrmlabs/raw/master/Class%20Data%20Set%20Factored.csv")
library(car)
library(reshape2)
library(descr)
library(psych)
library(tidyverse)
library(skimr)
ds <- read_csv("https://github.com/ripberjt/qrmlabs/raw/master/Class%20Data%20Set%20Factored.csv")
table(ds$f.party.2)
ds
mean(ds$f.party.2)
ds$f.party.2
str(ds$f.party.2)
help(read_csv)
library(car)
library(reshape2)
library(descr)
library(psych)
library(tidyverse)
library(skimr)
ds <- read_csv("https://github.com/ripberjt/qrmlabs/raw/master/Class%20Data%20Set%20Factored.csv")
ds %>% mutate_if(is.character, factor)
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(reshape2)
library(descr)
library(psych)
library(tidyverse)
library(skimr)
ds <- read_csv("https://github.com/ripberjt/qrmlabs/raw/master/Class%20Data%20Set%20Factored.csv") %>%
mutate_if(is.character, factor)
table(ds$f.party.2)
mean(ds$f.party.2)
str(ds$f.party.2)
install.packages("HistData")
library(car)
library(psych)
library(HistData)
library(tidyverse)
ds <- read_csv("https://github.com/ripberjt/qrmlabs/raw/master/Class%20Data%20Set%20Factored.csv")
options(scipen=999)
data <- data.frame(random = rnorm(1000, mean = 50, sd = 5))
ggplot(data, aes(sample = random)) +
stat_qq() +
stat_qq_line()
shapiro.test(data$random)
describe(faithful$eruptions)
ggplot(faithful, aes(eruptions)) +
geom_density() +
stat_function(fun = dnorm, args = list(mean = mean(faithful$eruptions),
sd = sd(faithful$eruptions)), color = "blue")
ggplot(faithful, aes(sample = eruptions)) +
stat_qq() +
stat_qq_line()
ggplot(MacdonellDF, aes(x = "", y = finger)) +
geom_boxplot()
ggplot(MacdonellDF, aes(y = finger)) +
geom_boxplot()
ggplot(MacdonellDF, aes(y = finger)) +
geom_boxplot()
ggplot(MacdonellDF, aes(finger)) +
geom_density() +
stat_function(fun = "dnorm", args = list(mean = mean(MacdonellDF$finger),
sd = sd(MacdonellDF$finger)),
color = "red", size = 1.5,
alpha = .3)
ggplot(MacdonellDF, aes(finger)) +
geom_density() +
stat_function(fun = "dnorm", args = list(mean = mean(MacdonellDF$finger),
sd = sd(MacdonellDF$finger)),
color = "red", size = 3.5,
alpha = 0.3)
ggplot(MacdonellDF, aes(sample = finger)) +
stat_qq() +
stat_qq_line()
shapiro.test(MacdonellDF$finger)
nrow(MacdonellDF$finger)
length(MacdonellDF$finger)
sd(ds$age, na.rm = T)/sqrt(length(ds$age) - sum(is.na(ds$age)))
describe(ds$age)
describe(ds$age)
describe(ds$age)$SE
describe(ds$age)
describe(ds$age)$se
qnorm(0.90)
qnorm(0.90)/2
1 - qnorm(0.90) / 2
qnorm(0.1)
qnorm(0.10)
qnorm(0.05)
1 - .05
qnorm(0.95 / 2)
qnorm(1-.05/2)
qnorm(0.05/2)
1 - qnorm(0.05/2)
qnorm(1-0.05/2)
0.05 / 2
1 - 0.05 / 2
qnorm(1 - 0.05 / 2) #here, 0.05 = 95% CI
qnorm(1 - 0.01 / 2) #here, 0.05 = 95% CI
qnorm(1 - 0.2 / 2) #here, 0.05 = 80% CI
mean(ds$age, na.rm = T)
describe(ds$age)$se # this is a way to pull the standard error out without having to look at everything else
60.38 + 1.96 * 0.28
mean(ds$age, na.rm = T) + 1.96*describe(ds$age)$se
60.38 + 1.96 * 0.28
mean(ds$age, na.rm = T) + 1.96*describe(ds$age)$se
mean(ds$age, na.rm = T) - 1.96*describe(ds$age)$se
60.38 - 1.96 * 0.28
mean(ds$age, na.rm = T) + 1.96*describe(ds$age)$se
mean(ds$age, na.rm = T) - 1.96*describe(ds$age)$se
mean(ds$age, na.rm = T) + 2.58 * age.se
mean(ds$age, na.rm = T) - 2.58 * age.se
age.se <- describe(ds$age)$se
mean(ds$age, na.rm = T) + 2.58 * age.se
mean(ds$age, na.rm = T) - 2.58 * age.se
mean(ds$age, na.rm = T) - 2.58 * age.se
mean(ds$age, na.rm = T) - 2.58 * age.se
mean(ds$age, na.rm = T) + 2.58 * age.se
t.test(ds$age)
Note the returned p-value of the previous `t.test()` performed is less than $\alpha$ = 0.05; therefore, the null hypothesis is rejected. This is not surprising or useful. For a more meaningful test, we will need to change the value of $\mu$, as shown below:
mean(ds$age, na.rm = T) + 2.58 * age.se
mean(ds$age, na.rm = T) - 2.58 * age.se
age.se <- describe(ds$age)$se
mean(ds$age, na.rm = T) + 2.58 * age.se
mean(ds$age, na.rm = T) - 2.58 * age.se
mean(ds$age, na.rm = T) + 2.58 * age.se
xbar <- mean(ds$age, na.rm = T)
alpha <- 60
xbar <- mean(ds$age, na.rm = T)
null <- 60
s <- sd(ds$age, na.rm = T)
s
se <- s/sqrt(n)
xbar <- mean(ds$age, na.rm = T)
null <- 60
s <- sd(ds$age, na.rm = T)
n <- 2547
se <- s / sqrt(n)
xbar <- mean(ds$age, na.rm = T)
nv <- 60
s <- sd(ds$age, na.rm = T)
n <- 2547
se <- s / sqrt(n)
2 * (1 - pnorm(xbar, mean = a, sd = s/sqrt(n)))
2 * (1 - pnorm(xbar, mean = 60, sd = s/sqrt(n)))
z <- (xbar - nv) / se
z
2 * (z)
2 * pnorm(z)
2 * pnorm(z, lower.tail = FALSE)
pt(z)
pt(z, df = 10)
2 * pnorm(z, lower.tail = FALSE)
2 * pnorm(z, lower.tail = FALSE)
2 * pt(z, lower.tail = FALSE, df = 10)
2 * pnorm(z, lower.tail = FALSE)
2 * pt(z, lower.tail = FALSE, df = 10)
2 * pnorm(z, lower.tail = FALSE)
2 * pt(z, lower.tail = FALSE, df = 20)
2 * pnorm(z, lower.tail = FALSE)
2 * pt(z, lower.tail = FALSE, df = 30)
2 * pnorm(z, lower.tail = FALSE)
2 * pt(z, lower.tail = FALSE, df = 50)
2 * pnorm(z, lower.tail = FALSE)
2 * pt(z, lower.tail = FALSE, df = 100)
t.test(ds$age, mu = 560)
t.test(ds$age, mu = 60)
mean(ds$age, na.rm = T)
ggplot(data, aes(sample = random)) +
stat_qq() +
stat_qq_line()
help(skim)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(psych)
library(car)
library(vcd)
library(reshape2)
library(skimr)
ds <- read_csv("https://github.com/ripberjt/qrmlabs/raw/master/Class%20Data%20Set%20Factored.csv")
options(scipen = 999)
ds %>%
count(glbcc)
ds %>%
count(glbcc) %>%
mutate(prop = n / sum(n))
ds %>%
count(glbcc) %>%
mutate(prop = n / sum(n)) %>%
ggplot(., aes(glbcc, prop)) +
geom_bar(stat = "identity")
se.gcc <-sqrt((0.5713 * (1 - 0.5713)/2547))
se.gcc
se.gcc <- describe(ds$glbcc)$se
se.gcc
ds %>%
count(glbcc) %>%
mutate(prop = n / sum(n))
se.gcc <- se.gcc <- describe(ds$glbcc)$se
new.ds <- ds %>%
count(glbcc) %>%
mutate(prop = n / sum(n),
se.gcc = se.gcc,
lower = prop - 1.96 * se.gcc,
upper = prop + 1.96 * se.gcc)
new.ds
ggplot(new.ds, aes(x = glbcc, y = prop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = lower, ymax = upper))
ds %>%
group_by(f.gender) %>%
count(glbcc) %>%
drop_na() %>%
mutate(prop = n / sum(n))
ds %>%
group_by(f.gender) %>%
count(glbcc) %>%
drop_na() %>%
mutate(prop = n / sum(n)) %>%
filter(glbcc == 1)
male <- filter(ds, gender==1)
female <- filter(ds, gender==0)
m.se <- describe(male$glbcc)$se
f.se <- describe(female$glbcc)$se
df2 <- ds %>%
group_by(f.gender) %>%
count(glbcc) %>%
drop_na() %>%
mutate(prop = n / sum(n)) %>%
filter(glbcc == 1) %>%
add_column(se = c(m.se, f.se))
ggplot(df2, aes(f.gender, prop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = prop - 1.96 * se,
ymax = prop + 1.96 * se))
t.test(male$glbcc, female$glbcc)
ds$r.gccrsk <- car::recode(ds$glbcc_risk, "0:1=1; 2:3=2; 4:6=3; 7:8:=4; 9:10=5")
table(ds$r.gccrsk)
gcc.table <- table(ds$r.gccrsk, ds$f.gender)
gcc.table
gcc.table %>% prop.table(margin = 2) * 100
chisq.test(gcc.table)
summary(gcc.table)
assocstats(gcc.table)
gcc.table2 <- table(ds$r.gccrsk, ds$f.ideology, ds$f.gender)
gcc.table2
chisq.test(gcc.table2[,,1])
assocstats(gcc.table2[,,1])
chisq.test(gcc.table2[,,2])
assocstats(gcc.table2[,,2])
ds$f.part <- car::recode(ds$f.party.2, "'Dem'='Dem'; 'Rep'='Rep'; else=NA")
ds %>%
count(f.part) %>%
drop_na()
ds %>%
group_by(f.part) %>%
skim(glbcc_risk)
ds %>%
group_by(f.part) %>%
discribe(glbcc_risk)
ds %>%
group_by(f.part) %>%
psych::discribe(glbcc_risk)
ds %>%
group_by(f.part) %>%
psych::describe(glbcc_risk)
ds %>%
group_by(f.part) %>%
describe(glbcc_risk)
help(skim)
ds %>%
group_by(f.part) %>%
skim_tee(glbcc_risk)
ds %>%
group_by(f.part) %>%
skim(glbcc_risk)
ds %>%
group_by(f.part) %>%
skim_to_list(glbcc_risk)
ds %>%
group_by(f.part) %>%
skim_with(numeric = list(hist = NULL))
ds %>%
group_by(f.part) %>%
skim(iris) %>% pander()
ds %>%
group_by(f.part) %>%
skim() %>% pander()
ds %>%
group_by(f.part) %>%
skim(gcc_risk) %>% pander()
ds %>%
group_by(f.part) %>%
skim(glbcc_risk) %>% pander()
ds %>%
group_by(f.part) %>%
skim(glbcc_risk)
ds %>%
group_by(f.part) %>%
summarise(mean(glbcc_risk), sd(glbcc_risk))
ds %>%
group_by(f.part) %>%
drop_na(glbcc_risk) %>%
summarise(mean(glbcc_risk), sd(glbcc_risk))
ds %>%
group_by(f.part) %>%
drop_na() %>%
summarise(mean(glbcc_risk), sd(glbcc_risk))
ds %>%
group_by(f.part) %>%
drop_na(glbcc_risk, f.part) %>%
summarise(mean(glbcc_risk), sd(glbcc_risk))
ds %>%
count(f.part) %>%
drop_na()
ds %>%
group_by(f.part) %>%
summarise(mean(glbcc_risk, na.rm = TRUE), sd(glbcc_risk, na.rm = TRUE)) %>%
drop_na()
ds %>%
count(glbcc)
ds %>%
count(glbcc) %>%
mutate(prop = n / sum(n))
ds %>%
count(glbcc) %>%
mutate(prop = n / sum(n)) %>%
ggplot(., aes(glbcc, prop)) +
geom_bar(stat = "identity")
ds %>%
count(glbcc) %>%
mutate(prop = n / sum(n)) %>%
ggplot(., aes(factor(glbcc), prop)) +
geom_bar(stat = "identity")
se.gcc <- sqrt((0.5713 * (1 - 0.5713) / 2547))
se.gcc
se.gcc
se.gcc <- describe(ds$glbcc)$se
se.gcc
se.gcc <- describe(factor(ds$glbcc))$se
se.gcc <- describe(ds$glbcc)$se
se.gcc
0.5713 * (1 - 0.5713)
0.5713 * (1 - 0.5713)
mean(ds$glbcc)
mean(ds$glbcc)
sd(ds$glbcc)
ds %>%
count(glbcc) %>%
mutate(prop = n / sum(n))
se.gcc <- se.gcc <- describe(ds$glbcc)$se
new.ds <- ds %>%
count(glbcc) %>%
mutate(prop = n / sum(n),
se.gcc = se.gcc,
lower = prop - 1.96 * se.gcc,
upper = prop + 1.96 * se.gcc)
new.ds
ggplot(new.ds, aes(x = glbcc, y = prop)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = lower, ymax = upper))
ggplot(new.ds, aes(x = glbcc, y = prop)) +
geom_point(stat = "identity") +
geom_errorbar(aes(ymin = lower, ymax = upper))
ggplot(new.ds, aes(x = glbcc, y = prop)) +
geom_point(stat = "identity") +
geom_errorbar(aes(ymin = lower, ymax = upper, width = 0.2))
ggplot(new.ds, aes(x = factor(glbcc), y = prop)) +
geom_point(stat = "identity") +
geom_errorbar(aes(ymin = lower, ymax = upper, width = 0.2))
ggplot(new.ds, aes(x = factor(glbcc), y = prop)) +
geom_point(stat = "identity") +
geom_line(stat = "identity", linetype = 2) +
geom_errorbar(aes(ymin = lower, ymax = upper, width = 0.2))
ggplot(new.ds, aes(x = factor(glbcc), y = prop)) +
geom_point(stat = "identity") +
geom_line(linetype = 2) +
geom_errorbar(aes(ymin = lower, ymax = upper, width = 0.2))
ggplot(new.ds, aes(x = factor(glbcc), y = prop)) +
geom_point(stat = "identity") +
geom_errorbar(aes(ymin = lower, ymax = upper, width = 0.2))
ggplot(new.ds, aes(x = factor(glbcc), y = prop)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper, width = 0.2))
ds %>%
group_by(f.gender) %>%
count(glbcc) %>%
drop_na() %>%
mutate(prop = n / sum(n))
ds %>%
group_by(f.gender) %>%
count(glbcc) %>%
drop_na() %>%
mutate(prop = n / sum(n)) %>%
filter(glbcc == 1)
male <- filter(ds, gender==1)
female <- filter(ds, gender==0)
m.se <- describe(male$glbcc)$se
f.se <- describe(female$glbcc)$se
df2 <- ds %>%
group_by(f.gender) %>%
count(glbcc) %>%
drop_na() %>%
mutate(prop = n / sum(n)) %>%
filter(glbcc == 1) %>%
add_column(se = c(m.se, f.se))
df2
ggplot(df2, aes(f.gender, prop)) +
geom_point() +
geom_errorbar(aes(ymin = prop - 1.96 * se, ymax = prop + 1.96 * se), width = 0.2)
t.test(male$glbcc, female$glbcc)
The t-test yields a p-value < $\alpha$ = 0.05, thereby the null hypothesis is rejected to conclude there is a statistical significance in responses by gender. Further, the point estimate calculated as 0.074 informs us 7% more women than men believe humans cause climate change. __Note:__ The confidence interval tells us that, with 95% confidence, the difference between women and men is between 3% and 11%. Judgment is required to determine whether gender difference is substantive.
ds$r.gccrsk <- car::recode(ds$glbcc_risk, "0:1=1; 2:3=2; 4:6=3; 7:8:=4; 9:10=5")
table(ds$r.gccrsk)
gcc.table <- table(ds$r.gccrsk, ds$f.gender)
gcc.table
gcc.table %>% prop.table(margin = 2) * 100
chisq.test(gcc.table)
summary(gcc.table)
assocstats(gcc.table)
gcc.table2 <- table(ds$r.gccrsk, ds$f.ideology, ds$f.gender)
gcc.table2
chisq.test(gcc.table2[,,1])
assocstats(gcc.table2[,,1])
chisq.test(gcc.table2[,,2])
assocstats(gcc.table2[,,2])
help("t.test")
ds$f.part <- car::recode(ds$f.party.2, "'Dem'='Dem'; 'Rep'='Rep'; else=NA")
ds %>%
group_by(f.part) %>%
summarise(mean(glbcc_risk, na.rm = TRUE), sd(glbcc_risk, na.rm = TRUE)) %>%
drop_na()
leveneTest(ds$glbcc_risk, ds$f.part)
t.test(ds$glbcc_risk ~ ds$f.part, var.equal = FALSE)
The previous test is an example of a two-tailed test, which lacks directionality (greater than, less than). In contrast, a one-tailed t-test tests hypotheses that include direction. To perform a one-tailed t-test, we include the command alt="greater" inside the `t.test()` function:
```{r 5_ind5, echo = TRUE}
t.test(ds$glbcc_risk ~ ds$f.part, alt = "greater")
t.test(ds$glbcc_risk ~ ds$f.part, var.equal = TRUE, , alt = "greater")
t.test(ds$glbcc_risk ~ ds$f.part, var.equal = TRUE, alt = "greater")
t.test(ds$glbcc_risk ~ ds$f.part, alt = "greater")
t.test(ds$glbcc_risk ~ ds$f.part, var.equal = TRUE, alt = "greater")
t.test(ds$glbcc_risk ~ ds$f.part, alt = "greater")
leveneTest(ds$glbcc_risk ~ ds$f.party.2)
pairwise.t.test(ds$glbcc_risk, ds$f.party.2, pool.sd = FALSE)
aov(ds$glbcc_risk ~ ds$f.party.2) %>% TukeyHSD()
var.test(exam.ds$Exam1, exam.ds$Exam2)
Student <- c("st1", "st2", "st3", "st4", "st5", "st6", "st7", "st8", "st9", "st10")
Exam1 <- c(99, 98, 67, 68, 70, 71, 72, 88, 75, 83)
Exam2 <- c(94, 93, 62, 63, 65, 66, 67, 83, 70, 76)
exam.ds <- data.frame(Student, Exam1, Exam2)
exam.ds
var.test(exam.ds$Exam1, exam.ds$Exam2)
t.test(exam.ds$Exam1, exam.ds$Exam2, paired = TRUE, var.equal = TRUE)
t.test(exam.ds$Exam1, exam.ds$Exam2, paired = TRUE, var.equal = TRUE, alt = "greater")
exam1 <- mean(exam.ds$Exam1, na.rm = T)
exam2 <- mean(exam.ds$Exam2, na.rm = T)
exam1.se <- describe(exam.ds$Exam1)$se
exam2.se <- describe(exam.ds$Exam2)$se
exam1up <- exam1 + exam1.se * 1.96
exam1low <- exam1 - exam1.se * 1.96
exam2up <- exam2 + exam2.se * 1.96
exam2low <- exam2 - exam2.se * 1.96
test <- c("Exam1", "Exam2")
scores <- c(exam1, exam2)
upper <- c(exam1up, exam2up)
lower <- c(exam1low, exam2low)
examdf <- data.frame(test, scores, upper, lower)
examdf
ggplot(examdf, aes(x = test, y = scores)) +
geom_point(size = 3, shape = 19, col = "dodgerblue3") +
geom_errorbar(aes(ymin = lower, ymax = upper), width = .1, col = "dodgerblue3") +
ylim(10, 100) +
ggtitle("Exam Scores") +
xlab("Exams") +
ylab("Scores")
exam.m <- melt(exam.ds, measure.vars = c("Exam1", "Exam2"))
exam.m
ggplot(exam.m, aes(x=Student, y=value, fill=variable)) +
geom_bar(stat="identity", position = position_dodge())
ggplot(exam.m, aes(x = Student, y = value, fill = variable)) +
geom_point(stat = "identity", position = position_dodge())
ggplot(exam.m, aes(x = Student, y = value, color = variable)) +
geom_point(stat = "identity", position = position_dodge())
ggplot(exam.m, aes(x = Student, y = value, fill = variable)) +
geom_bar(stat = "identity", position = position_dodge())
